class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(!l1) return l2;    //If either of list is empty 2nd one is returned.
        if(!l2) return l1;
        ListNode*head = l1;       //Declaring the head. 
        if(l1->val > l2->val){    //Comparing both the list and finding out the head.
            head = l2;
        l2 = l2->next;
        }
        else{
            l1 = l1->next;
        }
        ListNode*curr = head;      //Current value represent the exact position of dummy node.
        while(l1 && l2){
            if(l1->val < l2->val){
                curr->next = l1;
                l1=l1->next;
            }
        else {
            curr->next = l2;
            l2=l2->next;
        }
        curr=curr->next;
        }
        if(!l1){
            curr->next=l2;
        }
        else{
            curr->next=l1;
        }
        return head;
    }
    
};
